filebeat.inputs:
  - type: log
    paths:
      - /path/to/your/application/logs/*.log
    # If logs are in JSON format, uncomment the following line:
    # json.message_key: log
    # json.keys_under_root: true

output.elasticsearch:
  hosts: ["https://es01:9200"]
  username: "elastic"
  password: "changeme"
  ssl.verification_mode: "none"  # Disables SSL verification if using self-signed certificates

setup.kibana:
  host: "http://kibana:5601"


##############

input {
  beats {
    port => 5044
  }
}

filter {
  # Optional: Add filtering logic here if needed
}

output {
  elasticsearch {
    hosts => ["https://es01:9200"]
    user => "elastic"
    password => "changeme"
    ssl => true
    ssl_certificate_verification => false
    index => "logstash-%{+YYYY.MM.dd}"
  }
}


######################


filebeat01:
    depends_on:
      - logstash01
    image: docker.elastic.co/beats/filebeat:${STACK_VERSION}
    volumes:
      - certs:/usr/share/filebeat/certs
      - filebeatdata01:/usr/share/filebeat/data
      - /path/to/your/application/logs:/usr/share/filebeat/logs
      - "./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
    environment:
      - ELASTIC_USER=elastic
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - LOGSTASH_HOSTS=http://logstash01:5044
    command:
      - --strict.perms=false

  logstash01:
    depends_on:
      es01:
        condition: service_healthy
      kibana:
        condition: service_healthy
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    ports:
      - 5044:5044
    volumes:
      - certs:/usr/share/logstash/certs
      - logstashdata01:/usr/share/logstash/data
      - "./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro"