import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.hdfs.MiniDFSCluster;
import org.junit.jupiter.api.extension.*;

import java.io.IOException;

public class HdfsClusterExtension implements BeforeAllCallback, AfterAllCallback {

    private static MiniDFSCluster cluster;
    private static Configuration conf;

    @Override
    public void beforeAll(ExtensionContext context) throws IOException {
        if (cluster == null) {
            synchronized (HdfsClusterExtension.class) {
                if (cluster == null) { // Double-check locking
                    conf = new Configuration();
                    conf.set("dfs.replication", "1");
                    MiniDFSCluster.Builder builder = new MiniDFSCluster.Builder(conf);
                    cluster = builder.build();
                }
            }
        }
    }

    @Override
    public void afterAll(ExtensionContext context) throws IOException {
        // We do NOT shut down the cluster here, because JUnit 5 creates multiple instances of the extension.
    }

    public static Configuration getConf() {
        return conf;
    }

    public static MiniDFSCluster getCluster() {
        return cluster;
    }
}



static {
    Runtime.getRuntime().addShutdownHook(new Thread(() -> {
        if (cluster != null) {
            System.out.println("Shutting down MiniDFSCluster...");
            cluster.shutdown();
        }
    }));
}