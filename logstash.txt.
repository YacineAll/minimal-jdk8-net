import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.*;
import org.apache.hadoop.io.IOUtils;
import org.apache.hadoop.io.compress.BZip2Codec;

import java.io.OutputStream;

public class HadoopBzip2Compressor {

    public static void compressFileToBzip2(Path inputPath, Configuration conf) throws Exception {
        FileSystem fs = FileSystem.get(conf);

        if (!fs.exists(inputPath)) {
            throw new IllegalArgumentException("Input file does not exist: " + inputPath);
        }

        // Define output path with .bz2 extension
        Path outputPath = new Path(inputPath.toString() + ".bz2");

        // Create input stream from the original file
        try (FSDataInputStream inputStream = fs.open(inputPath);
             FSDataOutputStream outputStream = fs.create(outputPath);
             CompressionOutputStream compressedOutput = new BZip2Codec().createOutputStream(outputStream)) {
            
            // Perform the compression
            IOUtils.copyBytes(inputStream, compressedOutput, conf, false);
        }

        // Optional: Delete original file after compression
        fs.delete(inputPath, false);
    }

    public static void main(String[] args) throws Exception {
        Configuration conf = new Configuration();
        Path filePath = new Path("/user/hadoop/input.txt"); // Example path

        compressFileToBzip2(filePath, conf);
        System.out.println("File compressed successfully: " + filePath + ".bz2");
    }
}