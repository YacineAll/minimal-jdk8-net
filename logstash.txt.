Yes, you can isolate Jackson dependencies for logstash-encoder using Maven's dependency management. Here's how:

```xml
<!-- In dependencies section -->
<dependency>
    <groupId>net.logstash.logback</groupId>
    <artifactId>logstash-logback-encoder</artifactId>
    <version>7.3</version>
    <exclusions>
        <!-- Exclude transitive Jackson dependencies -->
        <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>*</artifactId>
        </exclusion>
    </exclusions>
</dependency>

<!-- Add Jackson dependencies specifically for logstash -->
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-core</artifactId>
    <version>2.13.0</version>
    <scope>runtime</scope>
    <classifier>logstash</classifier>
</dependency>
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>2.13.0</version>
    <scope>runtime</scope>
    <classifier>logstash</classifier>
</dependency>
```

Then use Maven Shade Plugin to relocate these Jackson dependencies:

```xml
<relocations>
    <relocation>
        <pattern>com.fasterxml.jackson</pattern>
        <shadedPattern>logstash.jackson</shadedPattern>
        <includes>
            <include>com.fasterxml.jackson.**</include>
        </includes>
    </relocation>
</relocations>
```

This way, logstash will use its own Jackson version without conflicting with Spark's version.