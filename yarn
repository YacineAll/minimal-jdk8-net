@TestConfiguration
public class MongoTestConfig {
    
    private static final MongodStarter starter = MongodStarter.getDefaultInstance();
    private MongodExecutable mongodExecutable;
    private MongodProcess mongod;
    
    @Bean
    public MongoTemplate mongoTemplate() throws Exception {
        int port = 27018; // Different from default MongoDB port
        IMongodConfig mongodConfig = new MongodConfigBuilder()
            .version(Version.Main.PRODUCTION)
            .net(new Net(port, Network.localhostIsIPv6()))
            .build();
            
        mongodExecutable = starter.prepare(mongodConfig);
        mongod = mongodExecutable.start();
        
        MongoClient mongoClient = MongoClients.create("mongodb://localhost:" + port);
        return new MongoTemplate(mongoClient, "test-db");
    }
    
    @PreDestroy
    public void cleanup() {
        if (mongod != null) {
            mongod.stop();
            mongodExecutable.stop();
        }
    }
}


@SpringBootTest
@Import(MongoTestConfig.class)
@ActiveProfiles("test") // Use a test profile
public class PaymentDuplicateServiceTest {

    @Autowired
    private MongoTemplate mongoTemplate;
    
    @Autowired
    private PaymentDuplicateService duplicateService;
    
    @BeforeEach
    public void setUp() {
        // Clear collection before each test
        mongoTemplate.getCollection("payments").drop();
    }
    
    @Test
    public void shouldDetectDuplicatePayments() {
        // Test implementation
    }
}



spring.data.mongodb.port=0
spring.mongodb.embedded.version=4.0.2
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration


